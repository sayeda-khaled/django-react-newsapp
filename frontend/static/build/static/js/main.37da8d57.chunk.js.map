{"version":3,"sources":["components/Registration.js","components/Login.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleSubmit","bind","handleInput","event","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","class","for","type","autoComplete","required","onChange","id","placeholder","onClick","handleSelection","Component","Login","password","handleLogin","Profile","display_name","avatar","preview","handleImage","e","file","files","setStaate","reader","FileReader","onloadend","result","readAsDataURL","a","formData","FormData","append","options","method","headers","Cookies","get","body","fetch","response","console","log","handleLogout","oncChange","src","alt","App","selection","user","JSON","stringify","handleError","error","warn","catch","ok","json","data","set","key","err","remove","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37da8d57.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Registration extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleRegistration(this.state)\n  }\n\nrender(){\n  return(\n    <form onSubmit={this.handleSubmit}>\n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput2\">User Name</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.username} id=\"formGroupExampleInput2\" placeholder=\"User Name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.email} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password1\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.password1} id=\"exampleInputPassword1\" placeholder=\"Password\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Confirm Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password2\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.password2} id=\"exampleInputPassword1\" placeholder=\"Password\" />\n      </div>\n      <button type=\"submit\" class=\"btn btn-secondary offset\" onClick={() => this.props.handleSelection('registration')}>Register</button>\n  </form>\n\n  );\n}\n\n\n}\n\nexport default Registration;\n","import { Component } from 'react';\n\nclass Login extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleLogin(this.state)\n  }\n\nrender(){\n  return(\n    <form onSubmit={this.handleSubmit}>\n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput2\">User Name</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.username} id=\"formGroupExampleInput2\" placeholder=\"User Name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.email} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.password1} id=\"exampleInputPassword1\" placeholder=\"Password\" />\n      </div>\n      <button type=\"submit\" class=\"btn btn-secondary offset\" onClick={() => this.props.handleSelection('login')}>Login</button>\n      <button type=\"submit\" class=\"btn btn-secondary offset\" onClick={() => this.props.handleSelection('registration')}>Register</button>\n\n  </form>\n\n  );\n}\n\n\n}\n\nexport default Login;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Profile extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: '',\n      avatar: null,\n      preview: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleImage(e) {\n    let file = e.target.files[0];      // this returns a list of files.. we want only a specific one\n    this.setStaate({\n       [e.target.name]: file,\n     });\n\n    let reader = new FileReader(); //alows us to read the image or the content of the file.. and it's asycronis..\n\n    reader.onloadend = () => { //When you are finished reading, I want you to call this.setstate and update the value to the preivew in the state\n      this.setState({\n        preview: reader.result,\n      });\n    }\n      reader.readAsDataURL(file);  //The result of that, set the value to it to the state\n\n  }\n\n\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let formData= new FormData();\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    formData.append('user', 1);\n\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: formData,\n      }\n      const response = await fetch('/api/v1/users/profiles/', options);\n      console.log(response);\n  }\n  render(){\n\n\n  return (\n    <form>\n      <button type=\"submit\" class=\"btn btn-primary offset\" onClick={() => this.props.handleLogout()}>Logout</button>\n\n      <input type='text' name=\"display_name\" value={this.state.display_name} oncChange={this.handleInput} />\n      <input type=\"file\" name=\"avatar\" onChange={this.handleImage} />\n\n      {this.state.avatar\n      ? <img src={this.state.preview} alt=\"\"/>\n      : null\n      }\n      <button type=\"submit\">Save Profile!</button>\n\n    </form>\n  );\n}\n}\n\nexport default Profile;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Registration from './components/Registration.js';\nimport Login from './components/Login';\nimport Profile from './components/Profile.js';\nimport './App.css';\n\n\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state={\n      selection: !!Cookies.get('Authorization') ? 'profile' : 'login'\n    }\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleSelection = this.handleSelection.bind(this);\n\n  }\n\n  async handleLogin(user) {\n    console.log(user)\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n    const handleError = (error) => console.warn(error);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'profile' });\n      }\n    }\n\n    async handleRegistration(user) {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(user),\n        };\n      const handleError = (error) => console.warn(error);\n      const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n        if(response.ok) {\n          const data = await response.json().catch(handleError);\n          Cookies.set('Authorization', `Token ${data.key}`);\n          this.setState({ selection: 'profile' });\n      }\n    }\n\n    async handleLogout(){\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      };\n        const handleError = (err) => console.warn(err);\n        const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n        if(response.ok) {\n          Cookies.remove('Authorization');\n          this.setState({ selection: 'login' });\n        }\n      }\n\n    async handleSelection(selection) {\n      this.setState({selection});\n    }\n\n  render() {\n\n    return(\n      <>\n        <section className=\"main\">\n        {this.state.selection === 'profile' && <Profile handleLogout={this.handleLogout}/>}\n        {this.state.selection === 'registration' && <Registration handleRegistration={this.handleRegistration} handleSelection={this.handleSelection}/>}\n        {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleSelection={this.handleSelection}/> }\n        </section>\n      </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}